{
  "content": "<h1 id=\"awaiteddom--parentnode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#awaiteddom--parentnode\">#</a><a href=\"/docs/hero/basic-client/awaited-dom\">AwaitedDOM</a> <span>/</span> ParentNode</h1>\n<div class='overview'><span class=\"seoSummary\">The <code><strong>ParentNode</strong></code> mixin contains methods and properties that are common to all types of <code>Node</code> objects that can have children.</span> It's implemented by <code>Element</code>, <code>Document</code>, and <code>DocumentFragment</code> objects.</div>\n<div class='overview'>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\" target=\"mdnrel\">Locating DOM elements using selectors</a> to learn how to use CSS selectors to find nodes or elements of interest.</div>\n<h2 id=\"properties\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#properties\">#</a>Properties</h2>\n<h3 id=\"childElementCount\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#childElementCount\">#</a>.childElementCount <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the number of children of this <code>ParentNode</code> which are elements.</p>\n<h4 id=\"type-promisenumber\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"children\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#children\">#</a>.children <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a live <code>HTMLCollection</code> containing all of the <code>Element</code> objects that are children of this <code>ParentNode</code>, omitting all of its non-element nodes.</p>\n<h4 id=\"type-superhtmlcollection\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superhtmlcollection\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-html-collection\"><code>SuperHTMLCollection</code></a></h4>\n<h3 id=\"firstElementChild\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#firstElementChild\">#</a>.firstElementChild <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the first node which is both a child of this <code>ParentNode</code> <em>and</em> is also an <code>Element</code>, or <code>null</code> if there is none.</p>\n<h4 id=\"type-superelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"lastElementChild\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lastElementChild\">#</a>.lastElementChild <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the last node which is both a child of this <code>ParentNode</code> <em>and</em> is an <code>Element</code>, or <code>null</code> if there is none.</p>\n<h4 id=\"type-superelement-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement-1\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h2 id=\"methods\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#methods\">#</a>Methods</h2>\n<h3 id=\"querySelector\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#querySelector\">#</a>.querySelector <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the first <code>Element</code> with the current element as root that matches the specified group of selectors.</p>\n<h4 id=\"arguments\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>selectors <code>string</code>. A <code>string</code> containing one or more selectors to match against. This string must be a valid compound selector list supported by the browser; if it's not, a <code>SyntaxError</code> exception is thrown. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\" target=\"mdnrel\">Locating DOM elements using selectors</a> for more information about using selectors to identify elements. Multiple selectors may be specified by separating them using commas.</li>\n</ul>\n<h4 id=\"returns-superelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-superelement\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"querySelectorAll\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#querySelectorAll\">#</a>.querySelectorAll <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>NodeList</code> representing a list of elements with the current element as root that matches the specified group of selectors.</p>\n<h4 id=\"arguments-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-1\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>selectors <code>string</code>. A <code>string</code> containing one or more selectors to match against. This string must be a valid CSS selector string; if it's not, a <code>SyntaxError</code> exception is thrown. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\" target=\"mdnrel\">Locating DOM elements using selectors</a> for more information about using selectors to identify elements. Multiple selectors may be specified by separating them using commas.</li>\n</ul>\n<h4 id=\"returns-supernodelist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-supernodelist\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-node-list\"><code>SuperNodeList</code></a></h4>\n<h2 id=\"unimplemented-specs\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#unimplemented-specs\">#</a>Unimplemented Specs</h2>\n<h4 id=\"methods-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#methods-1\">#</a>Methods</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>append()</code></td>\n<td><code>prepend()</code></td>\n</tr>\n</tbody>\n</table>",
  "title": " <span>/</span> ParentNode",
  "subtitles": [
    {
      "depth": 2,
      "value": "Properties",
      "anchor": "#properties"
    },
    {
      "depth": 3,
      "value": ".childElementCount <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#childElementCount"
    },
    {
      "depth": 3,
      "value": ".children <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#children"
    },
    {
      "depth": 3,
      "value": ".firstElementChild <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#firstElementChild"
    },
    {
      "depth": 3,
      "value": ".lastElementChild <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#lastElementChild"
    },
    {
      "depth": 2,
      "value": "Methods",
      "anchor": "#methods"
    },
    {
      "depth": 3,
      "value": ".querySelector <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#querySelector"
    },
    {
      "depth": 3,
      "value": ".querySelectorAll <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#querySelectorAll"
    },
    {
      "depth": 2,
      "value": "Unimplemented Specs",
      "anchor": "#unimplemented-specs"
    }
  ]
}