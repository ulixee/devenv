{
  "content": "<h1 id=\"awaiteddom--htmlinputelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#awaiteddom--htmlinputelement\">#</a><a href=\"/docs/hero/basic-client/awaited-dom\">AwaitedDOM</a> <span>/</span> HTMLInputElement</h1>\n<div class='overview'>The <strong><code>HTMLInputElement</code></strong> interface provides special properties and methods for manipulating the options, layout, and presentation of <code>&lt;input&gt;</code> elements.</div>\n<h2 id=\"properties\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#properties\">#</a>Properties</h2>\n<h3 id=\"accept\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#accept\">#</a>elem.accept <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>: </em><strong>Returns</strong> the element's <code>accept</code> attribute, containing comma-separated list of file types accepted by the server when <code>type</code> is <code>file</code>.</p>\n<h4 id=\"type-promisestring\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"alt\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#alt\">#</a>elem.alt <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>: </em><strong>Returns</strong> the element's <code>alt</code> attribute, containing alternative text to use when <code>type</code> is <code>image.</code></p>\n<h4 id=\"type-promisestring-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-1\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"autocomplete\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#autocomplete\">#</a>elem.autocomplete <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>: </em><strong>Returns</strong> the element's <code>autocomplete</code> attribute, indicating whether the value of the control can be automatically completed by the browser.</p>\n\t\t\t<p>Ignored if the value of the <code>type</code> attribute is <code>hidden</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, or a button type (<code>button</code>, <code>submit</code>, <code>reset</code>, <code>image</code>).</p>\n\t\t\t<dl>\n\t\t\t\t<dt>Possible values are:</dt>\n\t\t\t\t<dd><code>on</code>: the browser can autocomplete the value using previously stored value<br>\n\t\t\t\t<code>off</code>: the user must explicity enter a value</dd>\n\t\t\t</dl>\n<h4 id=\"type-promisestring-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-2\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"autofocus\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#autofocus\">#</a>elem.autofocus <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the element's <code>autofocus</code> attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the <code>autofocus</code> attribute. It cannot be applied if the <code>type</code> attribute is set to <code>hidden</code> (that is, you cannot automatically set focus to a hidden control).</p>\n<h4 id=\"type-promiseboolean\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"checked\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#checked\">#</a>elem.checked <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the current state of the element when <code>type</code> is <code>checkbox</code> or <code>radio</code>.</p>\n<h4 id=\"type-promiseboolean-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-1\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"defaultChecked\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#defaultChecked\">#</a>elem.defaultChecked <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the default state of a radio button or checkbox as originally specified in HTML that created this object.</p>\n<h4 id=\"type-promiseboolean-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-2\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"defaultValue\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#defaultValue\">#</a>elem.defaultValue <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the default value as originally specified in the HTML that created this object.</p>\n<h4 id=\"type-promisestring-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-3\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"dirName\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#dirName\">#</a>elem.dirName <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns </strong>the directionality of the element.</p>\n<h4 id=\"type-promisestring-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-4\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"disabled\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#disabled\">#</a>elem.disabled <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the element's <code>disabled</code> attribute, indicating that the control is not available for interaction. The input values will not be submitted with the form. See also <code>readonly</code></p>\n<h4 id=\"type-promiseboolean-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-3\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"files\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#files\">#</a>elem.files <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>FileList</code><code> array</code>:</em> <strong>Returns</strong> the list of selected files.</p>\n<h4 id=\"type-filelist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-filelist\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/file-list\"><code>FileList</code></a></h4>\n<h3 id=\"form\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#form\">#</a>elem.form <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>HTMLFormElement</code><code> object</code>:</em> <strong>Returns</strong> a reference to the parent <code>&#x3C;form></code> element.</p>\n<h4 id=\"type-htmlformelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-htmlformelement\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/html-form-element\"><code>HTMLFormElement</code></a></h4>\n<h3 id=\"formAction\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#formAction\">#</a>elem.formAction <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>: </em><strong>Returns</strong> the element's <code>formaction</code> attribute, containing the URI of a program that processes information submitted by the element. This overrides the <code>action</code> attribute of the parent form.</p>\n<h4 id=\"type-promisestring-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-5\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"formEnctype\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#formEnctype\">#</a>elem.formEnctype <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>formenctype</code> attribute, containing the type of content that is used to submit the form to the server. This overrides the <code>enctype</code> attribute of the parent form.</p>\n<h4 id=\"type-promisestring-6\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-6\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"formMethod\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#formMethod\">#</a>elem.formMethod <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>formmethod</code> attribute, containing the HTTP method that the browser uses to submit the form. This overrides the <code>method</code> attribute of the parent form.</p>\n<h4 id=\"type-promisestring-7\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-7\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"formNoValidate\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#formNoValidate\">#</a>elem.formNoValidate <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the element's <code>formnovalidate</code> attribute, indicating that the form is not to be validated when it is submitted. This overrides the <code>novalidate</code> attribute of the parent form.</p>\n<h4 id=\"type-promiseboolean-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-4\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"formTarget\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#formTarget\">#</a>elem.formTarget <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>formtarget</code> attribute, containing a name or keyword indicating where to display the response that is received after submitting the form. This overrides the <code>target</code> attribute of the parent form.</p>\n<h4 id=\"type-promisestring-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-8\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"height\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#height\">#</a>elem.height <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>: </em><strong>Returns</strong> the element's <code>height</code> attribute, which defines the height of the image displayed for the button, if the value of <code>type</code> is <code>image</code>.</p>\n<h4 id=\"type-promisenumber\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"indeterminate\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#indeterminate\">#</a>elem.indeterminate <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> whether the checkbox or radio button is in indeterminate state. For checkboxes, the effect is that the appearance of the checkbox is obscured/greyed in some way as to indicate its state is indeterminate (not checked but not unchecked). Does not affect the value of the <code>checked</code> attribute, and clicking the checkbox will set the value to false.</p>\n<h4 id=\"type-promiseboolean-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-5\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"inputMode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#inputMode\">#</a>elem.inputMode <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Provides a hint to browsers as to the type of virtual keyboard configuration to use when editing this element or its contents.</p>\n<h4 id=\"type-promisestring-9\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-9\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"labels\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#labels\">#</a>elem.labels <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>NodeList</code><code> array</code>:</em> <strong>Returns</strong> a list of <code>&#x3C;label></code> elements that are labels for this element.</p>\n<h4 id=\"type-supernodelist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernodelist\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node-list\"><code>SuperNodeList</code></a></h4>\n<h3 id=\"list\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#list\">#</a>elem.list <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>HTMLElement</code><code> object</code>:</em> <strong>Returns</strong> the element pointed by the <code>list</code> attribute. The property may be <code>null</code> if no HTML element found in the same tree.</p>\n<h4 id=\"type-superhtmlelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superhtmlelement\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-html-element\"><code>SuperHTMLElement</code></a></h4>\n<h3 id=\"max\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#max\">#</a>elem.max <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>max</code> attribute, containing the maximum (numeric or date-time) value for this item, which must not be less than its minimum (<code>min</code> attribute) value.</p>\n<h4 id=\"type-promisestring-10\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-10\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"maxLength\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#maxLength\">#</a>elem.maxLength <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>long</code>:</em> <strong>Returns</strong> the element's <code>maxlength</code> attribute, containing the <strong>maximum number of characters</strong> (in Unicode code points) that the value can have. (If you set this to a negative number, an exception will be thrown.)</p>\n<h4 id=\"type-promisenumber-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-1\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"min\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#min\">#</a>elem.min <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>min</code> attribute, containing the minimum (numeric or date-time) value for this item, which must not be greater than its maximum (<code>max</code> attribute) value.</p>\n<h4 id=\"type-promisestring-11\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-11\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"minLength\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#minLength\">#</a>elem.minLength <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>long</code>:</em> <strong>Returns</strong> the element's <code>minlength</code> attribute, containing the <strong>minimum number of characters</strong> (in Unicode code points) that the value can have. (If you set this to a negative number, an exception will be thrown.)</p>\n<h4 id=\"type-promisenumber-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-2\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"multiple\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#multiple\">#</a>elem.multiple <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the element's <code>multiple</code> attribute, indicating whether more than one value is possible (e.g., multiple files).</p>\n<h4 id=\"type-promiseboolean-6\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-6\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"name\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#name\">#</a>elem.name <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>name</code> attribute, containing a name that identifies the element when submitting the form.</p>\n<h4 id=\"type-promisestring-12\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-12\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"pattern\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#pattern\">#</a>elem.pattern <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the element's <code>pattern</code> attribute, containing a <strong>regular expression</strong> that the control's value is checked against. Use the <code>title</code> attribute to describe the pattern to help the user.</p>\n\t\t\t<p>This attribute only applies when the value of the <code>type</code> attribute is <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code> or <code>email</code>.</p>\n<h4 id=\"type-promisestring-13\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-13\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"placeholder\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#placeholder\">#</a>elem.placeholder <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>: </em><strong>Returns </strong>the element's <code>placeholder</code> attribute, containing a hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds.</p>\n\t\t\t<p>This attribute only applies when the value of the <code>type</code> attribute is <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code> or <code>email</code>.</p>\n<h4 id=\"type-promisestring-14\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-14\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"readOnly\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#readOnly\">#</a>elem.readOnly <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em><strong> Returns</strong> the element's <code>readonly</code> attribute, indicating that the user cannot modify the value of the control.<br>\n\t\t\t<span class=\"inlineIndicator htmlVer htmlVerInline\">HTML5</span>.</p>\n\t\t\t<p>This attribute is ignored if the value of the <code>type</code> attribute is <code>hidden</code>, <code>range</code>, <code>color</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, or a button type.</p>\n<h4 id=\"type-promiseboolean-7\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-7\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"required\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#required\">#</a>elem.required <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>boolean</code>:</em> <strong>Returns</strong> the element's <code>required</code> attribute, indicating that the user must fill in a value before submitting a form.</p>\n<h4 id=\"type-promiseboolean-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-8\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"selectionDirection\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#selectionDirection\">#</a>elem.selectionDirection <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>string</code>:</em> <strong>Returns</strong> the direction in which selection occurred.</p>\n\t\t\t<dl>\n\t\t\t\t<dt>Possible values are:</dt>\n\t\t\t\t<dd><code>forward</code> if selection was performed in the start-to-end direction of the current locale<br>\n\t\t\t\t<code>backward</code> for the opposite direction<br>\n\t\t\t\t<code>none</code> if the direction is unknown</dd>\n\t\t\t</dl>\n<h4 id=\"type-promisestring-15\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-15\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"selectionEnd\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#selectionEnd\">#</a>elem.selectionEnd <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>unsigned long</code>:</em> <strong>Returns </strong>the end index of the selected text. When there's no selection, this returns the offset of the character immediately following the current text input cursor position.</p>\n<h4 id=\"type-promisenumber-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-3\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"selectionStart\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#selectionStart\">#</a>elem.selectionStart <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>unsigned long</code>:</em> <strong>Returns</strong> the beginning index of the selected text. When nothing is selected, this returns the position of the text input cursor (caret) inside of the <code>&#x3C;input></code> element.</p>\n<h4 id=\"type-promisenumber-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-4\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"size\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#size\">#</a>elem.size <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>unsigned long</code>:</em> <strong>Returns </strong>the element's <code>size</code> attribute, which contains the <strong>visual size of the control</strong>. This value is in pixels unless the value of <code>type</code> is <code>text</code> or <code>password</code>, in which case, it is an integer number of characters.</p>\n\t\t\t<p>This attribute only applies when <code>type</code> is set to <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code>, <code>email</code>, or <code>password</code>.</p>\n<h4 id=\"type-promisenumber-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-5\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"src\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#src\">#</a>elem.src <div class=\"specs\"><i>W3C</i></div></h3>\n<p><code><em>string</em></code><em>:</em> <strong>Returns</strong> the element's <code>src</code> attribute, which specifies a URI for the location of an image to display on the graphical submit button, if the value of <code>type</code> is <code>image</code>; otherwise it is ignored.</p>\n<h4 id=\"type-promisestring-16\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-16\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"step\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#step\">#</a>elem.step <div class=\"specs\"><i>W3C</i></div></h3>\n<p><code><em>string</em></code><em>:</em> <strong>Returns</strong> the element's <code>step</code> attribute, which works with<strong> </strong><code>min</code> and <code>max</code> to limit the increments at which a numeric or date-time value can be set. It can be the string <code>any</code> or a positive floating point number. If this is not set to <code>any</code>, the control accepts only values at multiples of the step value greater than the minimum.</p>\n<h4 id=\"type-promisestring-17\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-17\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"type\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type\">#</a>elem.type <div class=\"specs\"><i>W3C</i></div></h3>\n<p><code><em>string</em></code>: <strong>Returns</strong> the element's <code>type</code> attribute, indicating the type of control to display. See <code>type</code> attribute of <code>&#x3C;input></code> for possible values.</p>\n<h4 id=\"type-promisestring-18\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-18\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"validationMessage\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#validationMessage\">#</a>elem.validationMessage <div class=\"specs\"><i>W3C</i></div></h3>\n<p><code><em>string</em></code><em>:</em> <strong>Returns</strong> a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<code>willvalidate</code> is <code>false</code>), or it satisfies its constraints. This value can be set by the <code>setCustomValidity</code> method.</p>\n<h4 id=\"type-promisestring-19\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-19\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"validity\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#validity\">#</a>elem.validity <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>ValidityState</code><code> object</code>:</em> <strong>Returns</strong> the element's current validity state.</p>\n<h4 id=\"type-promisevaliditystate\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisevaliditystate\">#</a><strong>Type</strong>: <code>Promise&#x3C;ValidityState></code></h4>\n<h3 id=\"value\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#value\">#</a>elem.value <div class=\"specs\"><i>W3C</i></div></h3>\n<p><code><em>string</em></code><em>:</em> <strong>Returns</strong> the current value of the control.\n<p class=\"note\"><strong>Note:</strong> If the user enters a value different from the value expected, this may return an empty string.</p></p>\n<h4 id=\"type-promisestring-20\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-20\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"valueAsDate\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#valueAsDate\">#</a>elem.valueAsDate <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>Date</code><code> object</code>:</em> <strong>Returns</strong> the value of the element, interpreted as a date, or <code>null</code> if conversion is not possible.</p>\n<h4 id=\"type-promiseany\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseany\">#</a><strong>Type</strong>: <code>Promise&#x3C;any></code></h4>\n<h3 id=\"valueAsNumber\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#valueAsNumber\">#</a>elem.valueAsNumber <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em><code>double</code>:</em> <strong>Returns</strong> the value of the element, interpreted as one of the following, in order:\n<ul>\n<li>A time value</li>\n<li>A number</li>\n<li><code>NaN</code> if conversion is impossible</li>\n</ul></p>\n<h4 id=\"type-promisenumber-6\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-6\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"width\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#width\">#</a>elem.width <div class=\"specs\"><i>W3C</i></div></h3>\n<p><code><em>string</em></code><em>:</em> <strong>Returns</strong> the document's <code>width</code> attribute, which defines the width of the image displayed for the button, if the value of <code>type</code> is <code>image</code>.</p>\n<h4 id=\"type-promisenumber-7\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-7\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"willValidate\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#willValidate\">#</a>elem.willValidate <div class=\"specs\"><i>W3C</i></div></h3>\n<p><em>`boolean`:</em> <strong>Returns</strong> whether the element is a candidate for constraint validation.</p>\n\t\t\t<p>It is <code>false</code> if any conditions bar it from constraint validation, including: its <code>type</code> is <code>hidden</code>, <code>reset</code>, or <code>button</code>; it has a datalist ancestor; or its <code>disabled</code> property is <code>true</code>.</p>\n<h4 id=\"type-promiseboolean-9\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-9\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"accessKey\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#accessKey\">#</a>elem.accessKey <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> representing the access key assigned to the element.</p>\n<h4 id=\"type-promisestring-21\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-21\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"autoCapitalize\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#autoCapitalize\">#</a>elem.autoCapitalize <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"type-promisestring-22\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-22\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"dir\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#dir\">#</a>elem.dir <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code>, reflecting the <code>dir</code> global attribute, representing the directionality of the element. Possible values are <code>\"ltr\"</code>, <code>\"rtl\"</code>, and <code>\"auto\"</code>.</p>\n<h4 id=\"type-promisestring-23\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-23\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"draggable\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#draggable\">#</a>elem.draggable <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>boolean</code> indicating if the element can be dragged.</p>\n<h4 id=\"type-promiseboolean-10\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-10\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"hidden\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#hidden\">#</a>elem.hidden <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>boolean</code> indicating if the element is hidden or not.</p>\n<h4 id=\"type-promiseboolean-11\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-11\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"inert\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#inert\">#</a>elem.inert <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>boolean</code> indicating whether the user agent must act as though the given node is absent for the purposes of user interaction events, in-page text searches (\"find in page\"), and text selection.</p>\n<h4 id=\"type-promiseboolean-12\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-12\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"innerText\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#innerText\">#</a>elem.innerText <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Represents the \"rendered\" text content of a node and its descendants. As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied it to the clipboard.</p>\n<h4 id=\"type-promisestring-24\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-24\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"lang\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lang\">#</a>elem.lang <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> representing the language of an element's attributes, text, and element contents.</p>\n<h4 id=\"type-promisestring-25\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-25\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"offsetHeight\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#offsetHeight\">#</a>elem.offsetHeight <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>double</code> containing the height of an element, relative to the layout.</p>\n<h4 id=\"type-promisenumber-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-8\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"offsetLeft\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#offsetLeft\">#</a>elem.offsetLeft <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>double</code>, the distance from this element's left border to its <code>offsetParent</code>'s left border.</p>\n<h4 id=\"type-promisenumber-9\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-9\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"offsetParent\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#offsetParent\">#</a>elem.offsetParent <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>Element</code> that is the element from which all offset calculations are currently computed.</p>\n<h4 id=\"type-superelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"offsetTop\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#offsetTop\">#</a>elem.offsetTop <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>double</code>, the distance from this element's top border to its <code>offsetParent</code>'s top border.</p>\n<h4 id=\"type-promisenumber-10\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-10\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"offsetWidth\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#offsetWidth\">#</a>elem.offsetWidth <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>double</code> containing the width of an element, relative to the layout.</p>\n<h4 id=\"type-promisenumber-11\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-11\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"spellcheck\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#spellcheck\">#</a>elem.spellcheck <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>boolean</code> that controls spell-checking. It is present on all HTML elements, though it doesn't have an effect on all of them.</p>\n<h4 id=\"type-promiseboolean-13\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-13\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"title\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#title\">#</a>elem.title <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> containing the text that appears in a popup box when mouse is over the element.</p>\n<h4 id=\"type-promisestring-26\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-26\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"translate\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#translate\">#</a>elem.translate <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>boolean</code> representing the translation.</p>\n<h4 id=\"type-promiseboolean-14\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-14\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"attributes\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#attributes\">#</a>elem.attributes <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>NamedNodeMap</code> object containing the assigned attributes of the corresponding HTML element.</p>\n<h4 id=\"type-namednodemap\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-namednodemap\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/named-node-map\"><code>NamedNodeMap</code></a></h4>\n<h3 id=\"classList\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#classList\">#</a>elem.classList <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>DOMTokenList</code> containing the list of class attributes.</p>\n<h4 id=\"type-domtokenlist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-domtokenlist\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/dom-token-list\"><code>DOMTokenList</code></a></h4>\n<h3 id=\"className\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#className\">#</a>elem.className <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> representing the class of the element.</p>\n<h4 id=\"type-promisestring-27\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-27\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"clientHeight\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#clientHeight\">#</a>elem.clientHeight <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>number</code> representing the inner height of the element.</p>\n<h4 id=\"type-promisenumber-12\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-12\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"clientLeft\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#clientLeft\">#</a>elem.clientLeft <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>number</code> representing the width of the left border of the element.</p>\n<h4 id=\"type-promisenumber-13\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-13\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"clientTop\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#clientTop\">#</a>elem.clientTop <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>number</code> representing the width of the top border of the element.</p>\n<h4 id=\"type-promisenumber-14\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-14\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"clientWidth\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#clientWidth\">#</a>elem.clientWidth <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>number</code> representing the inner width of the element.</p>\n<h4 id=\"type-promisenumber-15\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-15\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"id\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#id\">#</a>elem.id <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> representing the id of the element.</p>\n<h4 id=\"type-promisestring-28\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-28\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"innerHTML\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#innerHTML\">#</a>elem.innerHTML <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> representing the markup of the element's content.</p>\n<h4 id=\"type-promisestring-29\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-29\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"localName\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#localName\">#</a>elem.localName <div class=\"specs\"><i>W3C</i></div></h3>\n<p>A <code>string</code> representing the local part of the qualified name of the element.</p>\n<h4 id=\"type-promisestring-30\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-30\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"namespaceURI\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#namespaceURI\">#</a>elem.namespaceURI <div class=\"specs\"><i>W3C</i></div></h3>\n<p>The namespace URI of the element, or <code>null</code> if it is no namespace.</p>\n <div class=\"note\">\n <p><strong>Note:</strong> In Firefox 3.5 and earlier, HTML elements are in no namespace. In later versions, HTML elements are in the <code><a class=\"external linkification-ext\" href=\"http://www.w3.org/1999/xhtml\" rel=\"noopener\" title=\"Linkification: http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</a></code> namespace in both HTML and XML trees. </p>\n </div>\n<h4 id=\"type-promisestring-31\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-31\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"outerHTML\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#outerHTML\">#</a>elem.outerHTML <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>string</code> representing the markup of the element including its content. When used as a setter, replaces the element with nodes parsed from the given string.</p>\n<h4 id=\"type-promisestring-32\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-32\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"part\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#part\">#</a>elem.part <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Represents the part identifier(s) of the element (i.e. set using the <code>part</code> attribute), returned as a <code>DOMTokenList</code>.</p>\n<h4 id=\"type-domtokenlist-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-domtokenlist-1\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/dom-token-list\"><code>DOMTokenList</code></a></h4>\n<h3 id=\"prefix\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#prefix\">#</a>elem.prefix <div class=\"specs\"><i>W3C</i></div></h3>\n<p>A <code>string</code> representing the namespace prefix of the element, or <code>null</code> if no prefix is specified.</p>\n<h4 id=\"type-promisestring-33\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-33\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"scrollHeight\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scrollHeight\">#</a>elem.scrollHeight <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>number</code> representing the scroll view height of an element.</p>\n<h4 id=\"type-promisenumber-16\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-16\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"scrollLeft\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scrollLeft\">#</a>elem.scrollLeft <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Is a <code>number</code> representing the left scroll offset of the element.</p>\n<h4 id=\"type-promisenumber-17\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-17\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"scrollTop\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scrollTop\">#</a>elem.scrollTop <div class=\"specs\"><i>W3C</i></div></h3>\n<p>A <code>number</code> representing number of pixels the top of the document is scrolled vertically.</p>\n<h4 id=\"type-promisenumber-18\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-18\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"scrollWidth\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scrollWidth\">#</a>elem.scrollWidth <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>number</code> representing the scroll view width of the element.</p>\n<h4 id=\"type-promisenumber-19\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-19\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"shadowRoot\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#shadowRoot\">#</a>elem.shadowRoot <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the open shadow root that is hosted by the element, or null if no open shadow root is present.</p>\n<h4 id=\"type-shadowroot\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-shadowroot\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/shadow-root\"><code>ShadowRoot</code></a></h4>\n<h3 id=\"slot\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#slot\">#</a>elem.slot <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the name of the shadow DOM slot the element is inserted in.</p>\n<h4 id=\"type-promisestring-34\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-34\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"tagName\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#tagName\">#</a>elem.tagName <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>String</code> with the name of the tag for the given element.</p>\n<h4 id=\"type-promisestring-35\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-35\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"baseURI\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#baseURI\">#</a>elem.baseURI <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>string</code> representing the base URL of the document containing the <code>Node</code>.</p>\n<h4 id=\"type-promisestring-36\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-36\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"childNodes\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#childNodes\">#</a>elem.childNodes <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a live <code>NodeList</code> containing all the children of this node. <code>NodeList</code> being live means that if the children of the <code>Node</code> change, the <code>NodeList</code> object is automatically updated.</p>\n<h4 id=\"type-supernodelist-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernodelist-1\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node-list\"><code>SuperNodeList</code></a></h4>\n<h3 id=\"firstChild\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#firstChild\">#</a>elem.firstChild <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>Node</code> representing the first direct child node of the node, or <code>null</code> if the node has no child.</p>\n<h4 id=\"type-supernode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernode\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"isConnected\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#isConnected\">#</a>elem.isConnected <div class=\"specs\"><i>W3C</i></div></h3>\n<p>A boolean indicating whether or not the Node is connected (directly or indirectly) to the context object, e.g. the <code>Document</code> object in the case of the normal DOM, or the <code>ShadowRoot</code> in the case of a shadow DOM.</p>\n<h4 id=\"type-promiseboolean-15\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-15\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"lastChild\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lastChild\">#</a>elem.lastChild <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>Node</code> representing the last direct child node of the node, or <code>null</code> if the node has no child.</p>\n<h4 id=\"type-supernode-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernode-1\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"nextSibling\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nextSibling\">#</a>elem.nextSibling <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>Node</code> representing the next node in the tree, or <code>null</code> if there isn't such node.</p>\n<h4 id=\"type-supernode-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernode-2\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"nodeName\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nodeName\">#</a>elem.nodeName <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>string</code> containing the name of the <code>Node</code>. The structure of the name will differ with the node type. E.g. An <code>HTMLElement</code> will contain the name of the corresponding tag, like <code>'audio'</code> for an <code>HTMLAudioElement</code>, a <code>Text</code> node will have the <code>'#text'</code> string, or a <code>Document</code> node will have the <code>'#document'</code> string.</p>\n<h4 id=\"type-promisestring-37\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-37\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"nodeType\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nodeType\">#</a>elem.nodeType <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an <code>unsigned short</code> representing the type of the node. Possible values are:</p>\n<code class=\"language-html\">\n    <table class=\"standard-table\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"col\">Name</th>\n\t\t\t\t<th scope=\"col\">Value</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td><code>ELEMENT_NODE</code></td>\n\t\t\t\t<td><code>1</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>ATTRIBUTE_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>2</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>TEXT_NODE</code></td>\n\t\t\t\t<td><code>3</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>CDATA_SECTION_NODE</code></td>\n\t\t\t\t<td><code>4</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>ENTITY_REFERENCE_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>5</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>ENTITY_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>6</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>PROCESSING_INSTRUCTION_NODE</code></td>\n\t\t\t\t<td><code>7</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>COMMENT_NODE</code></td>\n\t\t\t\t<td><code>8</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>DOCUMENT_NODE</code></td>\n\t\t\t\t<td><code>9</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>DOCUMENT_TYPE_NODE</code></td>\n\t\t\t\t<td><code>10</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>DOCUMENT_FRAGMENT_NODE</code></td>\n\t\t\t\t<td><code>11</code></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><code>NOTATION_NODE</code>&nbsp;<span class=\"icon-only-inline\" title=\"This deprecated API should no longer be used, but will probably still work.\"><i class=\"icon-thumbs-down-alt\"> </i></span></td>\n\t\t\t\t<td><code>12</code></td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</code>\n<h4 id=\"type-promisenumber-20\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-20\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"nodeValue\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nodeValue\">#</a>elem.nodeValue <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the value of the current node.</p>\n<h4 id=\"type-promisestring-38\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-38\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"ownerDocument\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ownerDocument\">#</a>elem.ownerDocument <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the <code>Document</code> that this node belongs to. If the node is itself a document, returns <code>null</code>.</p>\n<h4 id=\"type-superdocument\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superdocument\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-document\"><code>SuperDocument</code></a></h4>\n<h3 id=\"parentElement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#parentElement\">#</a>elem.parentElement <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an <code>Element</code> that is the parent of this node. If the node has no parent, or if that parent is not an <code>Element</code>, this property returns <code>null</code>.</p>\n<h4 id=\"type-superelement-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement-1\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"parentNode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#parentNode\">#</a>elem.parentNode <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>Node</code> that is the parent of this node. If there is no such node, like if this node is the top of the tree or if doesn't participate in a tree, this property returns <code>null</code>.</p>\n<h4 id=\"type-supernode-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernode-3\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"previousSibling\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#previousSibling\">#</a>elem.previousSibling <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>Node</code> representing the previous node in the tree, or <code>null</code> if there isn't such node.</p>\n<h4 id=\"type-supernode-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-supernode-4\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"textContent\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#textContent\">#</a>elem.textContent <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the textual content of an element and all its descendants.</p>\n<h4 id=\"type-promisestring-39\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-39\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"style\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#style\">#</a>elem.style <div class=\"specs\"><i>W3C</i></div></h3>\n<p>The <code><strong>style</strong></code> property is used to get as well as set the <em>inline</em> style of an element. When getting, it returns a <code>CSSStyleDeclaration</code> object that contains a list of all styles properties for that element with values assigned for the attributes that are defined in the element's inline <code>style</code> attribute.</p>\n<h4 id=\"type-cssstyledeclaration\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-cssstyledeclaration\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/css-style-declaration\"><code>CSSStyleDeclaration</code></a></h4>\n<h3 id=\"contentEditable\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#contentEditable\">#</a>elem.contentEditable <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"type-promisestring-40\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-40\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"isContentEditable\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#isContentEditable\">#</a>elem.isContentEditable <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"type-promiseboolean-16\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiseboolean-16\">#</a><strong>Type</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"dataset\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#dataset\">#</a>elem.dataset <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"type-promiserecordstring-string\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promiserecordstring-string\">#</a><strong>Type</strong>: <code>Promise&#x3C;Record&#x3C;string, string>></code></h4>\n<h3 id=\"nonce\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nonce\">#</a>elem.nonce <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"type-promisestring-41\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisestring-41\">#</a><strong>Type</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"tabIndex\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#tabIndex\">#</a>elem.tabIndex <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"type-promisenumber-21\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-21\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"nextElementSibling\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nextElementSibling\">#</a>elem.nextElementSibling <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the <code>Element</code> immediately following this node in its parent's children list, or <code>null</code> if there is no <code>Element</code> in the list following this node.</p>\n<h4 id=\"type-superelement-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement-2\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"previousElementSibling\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#previousElementSibling\">#</a>elem.previousElementSibling <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the <code>Element</code> immediately prior to this node in its parent's children list, or <code>null</code> if there is no <code>Element</code> in the list prior to this node.</p>\n<h4 id=\"type-superelement-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement-3\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"childElementCount\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#childElementCount\">#</a>elem.childElementCount <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the number of children of this <code>ParentNode</code> which are elements.</p>\n<h4 id=\"type-promisenumber-22\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber-22\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"children\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#children\">#</a>elem.children <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a live <code>HTMLCollection</code> containing all of the <code>Element</code> objects that are children of this <code>ParentNode</code>, omitting all of its non-element nodes.</p>\n<h4 id=\"type-superhtmlcollection\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superhtmlcollection\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-html-collection\"><code>SuperHTMLCollection</code></a></h4>\n<h3 id=\"firstElementChild\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#firstElementChild\">#</a>elem.firstElementChild <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the first node which is both a child of this <code>ParentNode</code> <em>and</em> is also an <code>Element</code>, or <code>null</code> if there is none.</p>\n<h4 id=\"type-superelement-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement-4\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"lastElementChild\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lastElementChild\">#</a>elem.lastElementChild <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the last node which is both a child of this <code>ParentNode</code> <em>and</em> is an <code>Element</code>, or <code>null</code> if there is none.</p>\n<h4 id=\"type-superelement-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-superelement-5\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"assignedSlot\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#assignedSlot\">#</a>elem.assignedSlot <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the <code>&#x3C;slot></code> the node is inserted in.</p>\n<h4 id=\"type-htmlslotelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-htmlslotelement\">#</a><strong>Type</strong>: <a href=\"/docs/hero/awaited-dom/html-slot-element\"><code>HTMLSlotElement</code></a></h4>\n<h2 id=\"methods\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#methods\">#</a>Methods</h2>\n<h3 id=\"checkValidity\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#checkValidity\">#</a>elem.checkValidity <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> that is <code>false</code> if the element is a candidate for constraint validation, and it does not satisfy its constraints. In this case, it also fires an <code>invalid</code> event at the element. It returns <code>true</code> if the element is not a candidate for constraint validation, or if it satisfies its constraints. Inherited from <code>HTMLObjectElement</code></p>\n<h4 id=\"returns-promiseboolean\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"reportValidity\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#reportValidity\">#</a>elem.reportValidity <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Runs the <code>checkValidity()</code> method, and if it returns <code>false</code> (for an invalid input or no <code>pattern</code> pattern attribute provided), then it reports to the user that the input is invalid in the same manner as if you submitted a form. Inherited from <code>HTMLFormElement</code></p>\n<h4 id=\"returns-promiseboolean-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-1\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"select\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#select\">#</a>elem.select <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Selects all the text in the <code>input</code> element, and focuses it so the user can subsequently replace all of its content.</p>\n<h4 id=\"returns-promisevoid\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"setRangeText\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#setRangeText\">#</a>elem.setRangeText <em>(replacement, start?, end?, selectionMode?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Replaces a range of text in the <code>input</code> element with new text.</p>\n<h4 id=\"arguments\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>replacement <code>string</code>. Needs content.</li>\n<li>start <code>number</code>. Needs content.</li>\n<li>end <code>number</code>. Needs content.</li>\n<li>selectionMode <code>SelectionMode</code>. Needs content.</li>\n</ul>\n<h4 id=\"returns-promisevoid-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-1\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"setSelectionRange\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#setSelectionRange\">#</a>elem.setSelectionRange <em>(start, end, direction?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Selects a range of text in the <code>input</code> element (but does not focus it).</p>\n<h4 id=\"arguments-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-1\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>start <code>number</code>. Needs content.</li>\n<li>end <code>number</code>. Needs content.</li>\n<li>direction <code>string</code>. Needs content.</li>\n</ul>\n<h4 id=\"returns-promisevoid-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-2\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"stepDown\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#stepDown\">#</a>elem.stepDown <em>(n?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Decrements the <code>value</code> by (<code>step</code> * n), where <code><var>n</var></code> defaults to <code>1</code> if not specified.</p>\n<h4 id=\"arguments-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-2\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>n <code>number</code>. Needs content.</li>\n</ul>\n<h4 id=\"returns-promisevoid-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-3\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"stepUp\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#stepUp\">#</a>elem.stepUp <em>(n?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Increments the <code>value</code> by (<code>step</code> * n), where <code><var>n</var></code> defaults to <code>1</code> if not specified.</p>\n<h4 id=\"arguments-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-3\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>n <code>number</code>. Needs content.</li>\n</ul>\n<h4 id=\"returns-promisevoid-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-4\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"click\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#click\">#</a>elem.click <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Sends a mouse click event to the element.</p>\n<h4 id=\"returns-promisevoid-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-5\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"closest\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#closest\">#</a>elem.closest <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the <code>Element</code> which is the closest ancestor of the current element (or the current element itself) which matches the selectors given in parameter.</p>\n<h4 id=\"arguments-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-4\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>selectors <code>string</code>. <code><var>selectors</var></code> is a <code>string</code> containing a selector list.<br>\nex: <code>p:hover, .toto + q</code></li>\n</ul>\n<h4 id=\"returns-superelement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-superelement\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"getAttribute\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getAttribute\">#</a>elem.getAttribute <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Retrieves the value of the named attribute from the current node and returns it as an <code>Object</code>.</p>\n<h4 id=\"arguments-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-5\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>qualifiedName <code>string</code>. <code><var>attributeName</var></code> is the name of the attribute whose value you want to get.</li>\n</ul>\n<h4 id=\"returns-promisestring\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisestring\">#</a><strong>Returns</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"getAttributeNames\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getAttributeNames\">#</a>elem.getAttributeNames <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an array of attribute names from the current element.</p>\n<h4 id=\"returns-promiseiterablestring\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseiterablestring\">#</a><strong>Returns</strong>: <code>Promise&#x3C;Iterable,string></code></h4>\n<h3 id=\"getAttributeNode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getAttributeNode\">#</a>elem.getAttributeNode <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Retrieves the node representation of the named attribute from the current node and returns it as an <code>Attr</code>.</p>\n<h4 id=\"arguments-6\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-6\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>qualifiedName <code>string</code>. <code>attrName</code> is a string containing the name of the attribute.</li>\n</ul>\n<h4 id=\"returns-promiseattr\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseattr\">#</a><strong>Returns</strong>: <code>Promise&#x3C;Attr></code></h4>\n<h3 id=\"getAttributeNodeNS\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getAttributeNodeNS\">#</a>elem.getAttributeNodeNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Retrieves the node representation of the attribute with the specified name and namespace, from the current node and returns it as an <code>Attr</code>.</p>\n<h4 id=\"arguments-7\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-7\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>namespace <code>string</code>. <code>namespace</code> is a string specifying the namespace of the attribute.</li>\n<li>localName <code>string</code>. <code>nodeName</code> is a string specifying the name of the attribute.</li>\n</ul>\n<h4 id=\"returns-promiseattr-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseattr-1\">#</a><strong>Returns</strong>: <code>Promise&#x3C;Attr></code></h4>\n<h3 id=\"getAttributeNS\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getAttributeNS\">#</a>elem.getAttributeNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Retrieves the value of the attribute with the specified name and namespace, from the current node and returns it as an <code>Object</code>.</p>\n<h4 id=\"arguments-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-8\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>namespace <code>string</code>. The namespace in which to look for the specified attribute.</li>\n<li>localName <code>string</code>. The name of the attribute to look for.</li>\n</ul>\n<h4 id=\"returns-promisestring-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisestring-1\">#</a><strong>Returns</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"getBoundingClientRect\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getBoundingClientRect\">#</a>elem.getBoundingClientRect <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the size of an element and its position relative to the viewport.</p>\n<h4 id=\"returns-promisedomrect\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisedomrect\">#</a><strong>Returns</strong>: <code>Promise&#x3C;DOMRect></code></h4>\n<h3 id=\"getClientRects\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getClientRects\">#</a>elem.getClientRects <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a collection of rectangles that indicate the bounding rectangles for each line of text in a client.</p>\n<h4 id=\"returns-promisedomrectlist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisedomrectlist\">#</a><strong>Returns</strong>: <code>Promise&#x3C;DOMRectList></code></h4>\n<h3 id=\"getElementsByClassName\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getElementsByClassName\">#</a>elem.getElementsByClassName <em>(classNames)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a live <code>HTMLCollection</code> that contains all descendants of the current element that possess the list of classes given in the parameter.</p>\n<h4 id=\"arguments-9\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-9\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>classNames <code>string</code>. A <code>string</code> containing one or more class names to match on, separated by whitespace.</li>\n</ul>\n<h4 id=\"returns-superhtmlcollection\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-superhtmlcollection\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-html-collection\"><code>SuperHTMLCollection</code></a></h4>\n<h3 id=\"getElementsByTagName\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getElementsByTagName\">#</a>elem.getElementsByTagName <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a live <code>HTMLCollection</code> containing all descendant elements, of a particular tag name, from the current element.</p>\n<h4 id=\"arguments-10\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-10\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>qualifiedName <code>string</code>. <code>tagName</code> is the qualified name to look for. The special string <code>\"*\"</code> represents all elements. For compatibility with XHTML, lower-case should be used.</li>\n</ul>\n<h4 id=\"returns-superhtmlcollection-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-superhtmlcollection-1\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-html-collection\"><code>SuperHTMLCollection</code></a></h4>\n<h3 id=\"getElementsByTagNameNS\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getElementsByTagNameNS\">#</a>elem.getElementsByTagNameNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a live <code>HTMLCollection</code> containing all descendant elements, of a particular tag name and namespace, from the current element.</p>\n<h4 id=\"arguments-11\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-11\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>namespace <code>string</code>. <code>namespaceURI</code> is the namespace URI of elements to look for (see <code>Element.namespaceURI</code> and <code>Attr.namespaceURI</code>). For example, if you need to look for XHTML elements, use the XHTML namespace URI, <span class=\"nowiki\"><code><a href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</a></code></span>.</li>\n<li>localName <code>string</code>. <code>localName</code> is either the local name of elements to look for or the special value <code>\"*\"</code>, which matches all elements (see <code>Element.localName</code> and <code>Attr.localName</code>).</li>\n</ul>\n<h4 id=\"returns-superhtmlcollection-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-superhtmlcollection-2\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-html-collection\"><code>SuperHTMLCollection</code></a></h4>\n<h3 id=\"hasAttribute\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#hasAttribute\">#</a>elem.hasAttribute <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> indicating if the element has the specified attribute or not.</p>\n<h4 id=\"arguments-12\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-12\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>qualifiedName <code>string</code>. is a string representing the name of the attribute.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-2\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"hasAttributeNS\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#hasAttributeNS\">#</a>elem.hasAttributeNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> indicating if the element has the specified attribute, in the specified namespace, or not.</p>\n<h4 id=\"arguments-13\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-13\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>namespace <code>string</code>. <code>namespace</code> is a string specifying the namespace of the attribute.</li>\n<li>localName <code>string</code>. <code>localName</code> is the name of the attribute.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-3\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"hasAttributes\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#hasAttributes\">#</a>elem.hasAttributes <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> indicating if the element has one or more HTML attributes present.</p>\n<h4 id=\"returns-promiseboolean-4\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-4\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"hasPointerCapture\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#hasPointerCapture\">#</a>elem.hasPointerCapture <em>(pointerId)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Indicates whether the element on which it is invoked has pointer capture for the pointer identified by the given pointer ID.</p>\n<h4 id=\"arguments-14\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-14\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>pointerId <code>number</code>. The <code>pointerId</code> of a <code>PointerEvent</code> object.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-5\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-5\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"matches\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#matches\">#</a>elem.matches <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> indicating whether or not the element would be selected by the specified selector string.</p>\n<h4 id=\"arguments-15\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-15\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>selectors <code>string</code>. <code><var>selectorString</var></code> is a string representing the selector to test.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-6\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-6\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"requestFullscreen\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#requestFullscreen\">#</a>elem.requestFullscreen <em>(options?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Asynchronously asks the browser to make the element full-screen.</p>\n<h4 id=\"arguments-16\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-16\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>options <code>FullscreenOptions</code>. A <code>FullscreenOptions</code> object  providing options that control the behavior of the transition to full-screen mode. Currently, the only option is <code>navigationUI</code>, which controls whether or not to show navigation UI while the element is in full-screen mode. The default value is <code>\"auto\"</code>, which indicates that the browser should decide what to do.</li>\n</ul>\n<h4 id=\"returns-promisevoid-6\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-6\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"requestPointerLock\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#requestPointerLock\">#</a>elem.requestPointerLock <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Allows to asynchronously ask for the pointer to be locked on the given element.</p>\n<h4 id=\"returns-promisevoid-7\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-7\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"scrollIntoView\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scrollIntoView\">#</a>elem.scrollIntoView <em>(arg?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Scrolls the page until the element gets into the view.</p>\n<h4 id=\"arguments-17\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-17\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>arg <code>boolean | ScrollIntoViewOptions</code>\n<ul>\n<li>Is a <code>boolean</code> value:\n  <ul>\n   <li>If <code>true</code>, the top of the element will be aligned to the top of the visible area of the scrollable ancestor. Corresponds to <code>scrollIntoViewOptions: {block: \"start\", inline: \"nearest\"}</code>. This is the default value.</li>\n   <li>If <code>false</code>, the bottom of the element will be aligned to the bottom of the visible area of the scrollable ancestor. Corresponds to <code>scrollIntoViewOptions: {block: \"end\", inline: \"nearest\"}</code>.</li>\n  </ul>\n</li>\n<li>Is an Object with the following properties:\n  <dl>\n   <dt><code>behavior</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n   <dd>Defines the transition animation.<br>\n   One of <code>auto</code> or <code>smooth</code>. Defaults to <code>auto</code>.</dd>\n   <dt><code>block</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n   <dd>Defines vertical alignment.<br>\n   One of <code>start</code>, <code>center</code>, <code>end</code>, or <code>nearest</code>. Defaults to <code>start</code>.</dd>\n   <dt><code>inline</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n   <dd>Defines horizontal alignment.<br>\n   One of <code>start</code>, <code>center</code>, <code>end</code>, or <code>nearest</code>. Defaults to <code>nearest</code>.</dd>\n  </dl>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"returns-promisevoid-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-8\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"compareDocumentPosition\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#compareDocumentPosition\">#</a>elem.compareDocumentPosition <em>(other)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Compares the position of the current node against another node in any other document.</p>\n<h4 id=\"arguments-18\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-18\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>other <a href=\"/docs/hero/awaited-dom/node\"><code>Node</code></a>. The other <code>Node</code> with which to compare the first <em><code>node</code></em>’s document position.</li>\n</ul>\n<h4 id=\"returns-promisenumber\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisenumber\">#</a><strong>Returns</strong>: <code>Promise&#x3C;number></code></h4>\n<h3 id=\"contains\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#contains\">#</a>elem.contains <em>(other)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> value indicating whether or not a node is a descendant of the calling node.</p>\n<h4 id=\"arguments-19\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-19\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>other <a href=\"/docs/hero/awaited-dom/node\"><code>Node</code></a>. Needs content.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-7\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-7\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"getRootNode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getRootNode\">#</a>elem.getRootNode <em>(options?)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the context object's root which optionally includes the shadow root if it is available. </p>\n<h4 id=\"arguments-20\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-20\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>options <code>GetRootNodeOptions</code>. An object that sets options for getting the root node. The available options are:\n  <ul>\n   <li><code>composed</code>: A `boolean` that indicates whether the shadow root should be returned (<code>false</code>, the default), or a root node beyond shadow root (<code>true</code>).</li>\n  </ul>\n</li>\n</ul>\n<h4 id=\"returns-supernode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-supernode\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"hasChildNodes\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#hasChildNodes\">#</a>elem.hasChildNodes <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> indicating whether or not the element has any child nodes.</p>\n<h4 id=\"returns-promiseboolean-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-8\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"isDefaultNamespace\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#isDefaultNamespace\">#</a>elem.isDefaultNamespace <em>(namespace)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Accepts a namespace URI as an argument and returns a <code>boolean</code> with a value of <code>true</code> if the namespace is the default namespace on the given node or <code>false</code> if not.</p>\n<h4 id=\"arguments-21\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-21\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>namespace <code>string</code>. <code>namespaceURI</code> is a string representing the namespace against which the element will be checked.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-9\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-9\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"isEqualNode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#isEqualNode\">#</a>elem.isEqualNode <em>(otherNode)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> which indicates whether or not two nodes are of the same type and all their defining data points match.</p>\n<h4 id=\"arguments-22\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-22\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>otherNode <a href=\"/docs/hero/awaited-dom/node\"><code>Node</code></a>. <code>otherNode</code>: The <code>Node</code> to compare equality with.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-10\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-10\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"isSameNode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#isSameNode\">#</a>elem.isSameNode <em>(otherNode)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>boolean</code> value indicating whether or not the two nodes are the same (that is, they reference the same object).</p>\n<h4 id=\"arguments-23\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-23\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>otherNode <a href=\"/docs/hero/awaited-dom/node\"><code>Node</code></a>. <code><var>otherNode</var></code> The <code>Node</code> to test against.</li>\n</ul>\n<h4 id=\"returns-promiseboolean-11\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promiseboolean-11\">#</a><strong>Returns</strong>: <code>Promise&#x3C;boolean></code></h4>\n<h3 id=\"lookupNamespaceURI\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lookupNamespaceURI\">#</a>elem.lookupNamespaceURI <em>(prefix)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Accepts a prefix and returns the namespace URI associated with it on the given node if found (and <code>null</code> if not). Supplying <code>null</code> for the prefix will return the default namespace.</p>\n<h4 id=\"arguments-24\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-24\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>prefix <code>string</code>. The prefix to look for. If this parameter is <code>null</code>, the method will return the default namespace URI, if any.</li>\n</ul>\n<h4 id=\"returns-promisestring-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisestring-2\">#</a><strong>Returns</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"lookupPrefix\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lookupPrefix\">#</a>elem.lookupPrefix <em>(namespace)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>string</code> containing the prefix for a given namespace URI, if present, and <code>null</code> if not. When multiple prefixes are possible, the result is implementation-dependent.</p>\n<h4 id=\"arguments-25\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-25\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>namespace <code>string</code>. Needs content.</li>\n</ul>\n<h4 id=\"returns-promisestring-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisestring-3\">#</a><strong>Returns</strong>: <code>Promise&#x3C;string></code></h4>\n<h3 id=\"normalize\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#normalize\">#</a>elem.normalize <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Clean up all the text nodes under this element (merge adjacent, remove empty).</p>\n<h4 id=\"returns-promisevoid-9\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-9\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"blur\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#blur\">#</a>elem.blur <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"returns-promisevoid-10\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-10\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"focus\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#focus\">#</a>elem.focus <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Needs content.</p>\n<h4 id=\"returns-promisevoid-11\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promisevoid-11\">#</a><strong>Returns</strong>: <code>Promise&#x3C;void></code></h4>\n<h3 id=\"querySelector\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#querySelector\">#</a>elem.querySelector <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns the first <code>Element</code> with the current element as root that matches the specified group of selectors.</p>\n<h4 id=\"arguments-26\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-26\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>selectors <code>string</code>. A <code>string</code> containing one or more selectors to match against. This string must be a valid compound selector list supported by the browser; if it's not, a <code>SyntaxError</code> exception is thrown. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\" target=\"mdnrel\">Locating DOM elements using selectors</a> for more information about using selectors to identify elements. Multiple selectors may be specified by separating them using commas.</li>\n</ul>\n<h4 id=\"returns-superelement-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-superelement-1\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-element\"><code>SuperElement</code></a></h4>\n<h3 id=\"querySelectorAll\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#querySelectorAll\">#</a>elem.querySelectorAll <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns a <code>NodeList</code> representing a list of elements with the current element as root that matches the specified group of selectors.</p>\n<h4 id=\"arguments-27\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments-27\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>selectors <code>string</code>. A <code>string</code> containing one or more selectors to match against. This string must be a valid CSS selector string; if it's not, a <code>SyntaxError</code> exception is thrown. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\" target=\"mdnrel\">Locating DOM elements using selectors</a> for more information about using selectors to identify elements. Multiple selectors may be specified by separating them using commas.</li>\n</ul>\n<h4 id=\"returns-supernodelist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-supernodelist\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-node-list\"><code>SuperNodeList</code></a></h4>\n<h2 id=\"unimplemented-specs\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#unimplemented-specs\">#</a>Unimplemented Specs</h2>\n<h4 id=\"properties-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#properties-1\">#</a>Properties</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>onfullscreenchange</code></td>\n<td><code>onfullscreenerror</code></td>\n</tr>\n<tr>\n<td><code>oncopy</code></td>\n<td><code>oncut</code></td>\n</tr>\n<tr>\n<td><code>onpaste</code></td>\n<td><code>onabort</code></td>\n</tr>\n<tr>\n<td><code>onanimationend</code></td>\n<td><code>onanimationiteration</code></td>\n</tr>\n<tr>\n<td><code>onanimationstart</code></td>\n<td><code>onauxclick</code></td>\n</tr>\n<tr>\n<td><code>onblur</code></td>\n<td><code>oncancel</code></td>\n</tr>\n<tr>\n<td><code>oncanplay</code></td>\n<td><code>oncanplaythrough</code></td>\n</tr>\n<tr>\n<td><code>onchange</code></td>\n<td><code>onclick</code></td>\n</tr>\n<tr>\n<td><code>onclose</code></td>\n<td><code>oncontextmenu</code></td>\n</tr>\n<tr>\n<td><code>oncuechange</code></td>\n<td><code>ondblclick</code></td>\n</tr>\n<tr>\n<td><code>ondrag</code></td>\n<td><code>ondragend</code></td>\n</tr>\n<tr>\n<td><code>ondragenter</code></td>\n<td><code>ondragleave</code></td>\n</tr>\n<tr>\n<td><code>ondragover</code></td>\n<td><code>ondragstart</code></td>\n</tr>\n<tr>\n<td><code>ondrop</code></td>\n<td><code>ondurationchange</code></td>\n</tr>\n<tr>\n<td><code>onemptied</code></td>\n<td><code>onended</code></td>\n</tr>\n<tr>\n<td><code>onerror</code></td>\n<td><code>onfocus</code></td>\n</tr>\n<tr>\n<td><code>onformdata</code></td>\n<td><code>ongotpointercapture</code></td>\n</tr>\n<tr>\n<td><code>oninput</code></td>\n<td><code>oninvalid</code></td>\n</tr>\n<tr>\n<td><code>onkeydown</code></td>\n<td><code>onkeypress</code></td>\n</tr>\n<tr>\n<td><code>onkeyup</code></td>\n<td><code>onload</code></td>\n</tr>\n<tr>\n<td><code>onloadeddata</code></td>\n<td><code>onloadedmetadata</code></td>\n</tr>\n<tr>\n<td><code>onloadstart</code></td>\n<td><code>onlostpointercapture</code></td>\n</tr>\n<tr>\n<td><code>onmousedown</code></td>\n<td><code>onmouseenter</code></td>\n</tr>\n<tr>\n<td><code>onmouseleave</code></td>\n<td><code>onmousemove</code></td>\n</tr>\n<tr>\n<td><code>onmouseout</code></td>\n<td><code>onmouseover</code></td>\n</tr>\n<tr>\n<td><code>onmouseup</code></td>\n<td><code>onpause</code></td>\n</tr>\n<tr>\n<td><code>onplay</code></td>\n<td><code>onplaying</code></td>\n</tr>\n<tr>\n<td><code>onpointercancel</code></td>\n<td><code>onpointerdown</code></td>\n</tr>\n<tr>\n<td><code>onpointerenter</code></td>\n<td><code>onpointerleave</code></td>\n</tr>\n<tr>\n<td><code>onpointermove</code></td>\n<td><code>onpointerout</code></td>\n</tr>\n<tr>\n<td><code>onpointerover</code></td>\n<td><code>onpointerup</code></td>\n</tr>\n<tr>\n<td><code>onprogress</code></td>\n<td><code>onratechange</code></td>\n</tr>\n<tr>\n<td><code>onreset</code></td>\n<td><code>onresize</code></td>\n</tr>\n<tr>\n<td><code>onscroll</code></td>\n<td><code>onseeked</code></td>\n</tr>\n<tr>\n<td><code>onseeking</code></td>\n<td><code>onselect</code></td>\n</tr>\n<tr>\n<td><code>onselectionchange</code></td>\n<td><code>onselectstart</code></td>\n</tr>\n<tr>\n<td><code>onstalled</code></td>\n<td><code>onsubmit</code></td>\n</tr>\n<tr>\n<td><code>onsuspend</code></td>\n<td><code>ontimeupdate</code></td>\n</tr>\n<tr>\n<td><code>ontouchcancel</code></td>\n<td><code>ontouchend</code></td>\n</tr>\n<tr>\n<td><code>ontouchmove</code></td>\n<td><code>ontouchstart</code></td>\n</tr>\n<tr>\n<td><code>ontransitionend</code></td>\n<td><code>onvolumechange</code></td>\n</tr>\n<tr>\n<td><code>onwaiting</code></td>\n<td><code>onwheel</code></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"methods-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#methods-1\">#</a>Methods</h4>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>setCustomValidity()</code></td>\n<td><code>attachShadow()</code></td>\n</tr>\n<tr>\n<td><code>computedStyleMap()</code></td>\n<td><code>insertAdjacentElement()</code></td>\n</tr>\n<tr>\n<td><code>insertAdjacentHTML()</code></td>\n<td><code>insertAdjacentText()</code></td>\n</tr>\n<tr>\n<td><code>releasePointerCapture()</code></td>\n<td><code>removeAttribute()</code></td>\n</tr>\n<tr>\n<td><code>removeAttributeNode()</code></td>\n<td><code>removeAttributeNS()</code></td>\n</tr>\n<tr>\n<td><code>scroll()</code></td>\n<td><code>scrollBy()</code></td>\n</tr>\n<tr>\n<td><code>scrollTo()</code></td>\n<td><code>setAttribute()</code></td>\n</tr>\n<tr>\n<td><code>setAttributeNode()</code></td>\n<td><code>setAttributeNodeNS()</code></td>\n</tr>\n<tr>\n<td><code>setAttributeNS()</code></td>\n<td><code>setPointerCapture()</code></td>\n</tr>\n<tr>\n<td><code>toggleAttribute()</code></td>\n<td><code>appendChild()</code></td>\n</tr>\n<tr>\n<td><code>cloneNode()</code></td>\n<td><code>insertBefore()</code></td>\n</tr>\n<tr>\n<td><code>removeChild()</code></td>\n<td><code>replaceChild()</code></td>\n</tr>\n<tr>\n<td><code>addEventListener()</code></td>\n<td><code>dispatchEvent()</code></td>\n</tr>\n<tr>\n<td><code>removeEventListener()</code></td>\n<td><code>animate()</code></td>\n</tr>\n<tr>\n<td><code>getAnimations()</code></td>\n<td><code>after()</code></td>\n</tr>\n<tr>\n<td><code>before()</code></td>\n<td><code>remove()</code></td>\n</tr>\n<tr>\n<td><code>replaceWith()</code></td>\n<td><code>append()</code></td>\n</tr>\n<tr>\n<td><code>prepend()</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>",
  "title": " <span>/</span> HTMLInputElement",
  "subtitles": [
    {
      "depth": 2,
      "value": "Properties",
      "anchor": "#properties"
    },
    {
      "depth": 3,
      "value": "elem.accept <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#accept"
    },
    {
      "depth": 3,
      "value": "elem.alt <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#alt"
    },
    {
      "depth": 3,
      "value": "elem.autocomplete <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#autocomplete"
    },
    {
      "depth": 3,
      "value": "elem.autofocus <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#autofocus"
    },
    {
      "depth": 3,
      "value": "elem.checked <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#checked"
    },
    {
      "depth": 3,
      "value": "elem.defaultChecked <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#defaultChecked"
    },
    {
      "depth": 3,
      "value": "elem.defaultValue <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#defaultValue"
    },
    {
      "depth": 3,
      "value": "elem.dirName <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#dirName"
    },
    {
      "depth": 3,
      "value": "elem.disabled <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#disabled"
    },
    {
      "depth": 3,
      "value": "elem.files <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#files"
    },
    {
      "depth": 3,
      "value": "elem.form <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#form"
    },
    {
      "depth": 3,
      "value": "elem.formAction <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#formAction"
    },
    {
      "depth": 3,
      "value": "elem.formEnctype <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#formEnctype"
    },
    {
      "depth": 3,
      "value": "elem.formMethod <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#formMethod"
    },
    {
      "depth": 3,
      "value": "elem.formNoValidate <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#formNoValidate"
    },
    {
      "depth": 3,
      "value": "elem.formTarget <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#formTarget"
    },
    {
      "depth": 3,
      "value": "elem.height <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#height"
    },
    {
      "depth": 3,
      "value": "elem.indeterminate <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#indeterminate"
    },
    {
      "depth": 3,
      "value": "elem.inputMode <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#inputMode"
    },
    {
      "depth": 3,
      "value": "elem.labels <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#labels"
    },
    {
      "depth": 3,
      "value": "elem.list <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#list"
    },
    {
      "depth": 3,
      "value": "elem.max <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#max"
    },
    {
      "depth": 3,
      "value": "elem.maxLength <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#maxLength"
    },
    {
      "depth": 3,
      "value": "elem.min <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#min"
    },
    {
      "depth": 3,
      "value": "elem.minLength <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#minLength"
    },
    {
      "depth": 3,
      "value": "elem.multiple <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#multiple"
    },
    {
      "depth": 3,
      "value": "elem.name <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#name"
    },
    {
      "depth": 3,
      "value": "elem.pattern <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#pattern"
    },
    {
      "depth": 3,
      "value": "elem.placeholder <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#placeholder"
    },
    {
      "depth": 3,
      "value": "elem.readOnly <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#readOnly"
    },
    {
      "depth": 3,
      "value": "elem.required <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#required"
    },
    {
      "depth": 3,
      "value": "elem.selectionDirection <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#selectionDirection"
    },
    {
      "depth": 3,
      "value": "elem.selectionEnd <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#selectionEnd"
    },
    {
      "depth": 3,
      "value": "elem.selectionStart <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#selectionStart"
    },
    {
      "depth": 3,
      "value": "elem.size <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#size"
    },
    {
      "depth": 3,
      "value": "elem.src <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#src"
    },
    {
      "depth": 3,
      "value": "elem.step <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#step"
    },
    {
      "depth": 3,
      "value": "elem.type <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#type"
    },
    {
      "depth": 3,
      "value": "elem.validationMessage <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#validationMessage"
    },
    {
      "depth": 3,
      "value": "elem.validity <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#validity"
    },
    {
      "depth": 3,
      "value": "elem.value <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#value"
    },
    {
      "depth": 3,
      "value": "elem.valueAsDate <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#valueAsDate"
    },
    {
      "depth": 3,
      "value": "elem.valueAsNumber <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#valueAsNumber"
    },
    {
      "depth": 3,
      "value": "elem.width <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#width"
    },
    {
      "depth": 3,
      "value": "elem.willValidate <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#willValidate"
    },
    {
      "depth": 3,
      "value": "elem.accessKey <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#accessKey"
    },
    {
      "depth": 3,
      "value": "elem.autoCapitalize <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#autoCapitalize"
    },
    {
      "depth": 3,
      "value": "elem.dir <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#dir"
    },
    {
      "depth": 3,
      "value": "elem.draggable <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#draggable"
    },
    {
      "depth": 3,
      "value": "elem.hidden <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#hidden"
    },
    {
      "depth": 3,
      "value": "elem.inert <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#inert"
    },
    {
      "depth": 3,
      "value": "elem.innerText <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#innerText"
    },
    {
      "depth": 3,
      "value": "elem.lang <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#lang"
    },
    {
      "depth": 3,
      "value": "elem.offsetHeight <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#offsetHeight"
    },
    {
      "depth": 3,
      "value": "elem.offsetLeft <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#offsetLeft"
    },
    {
      "depth": 3,
      "value": "elem.offsetParent <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#offsetParent"
    },
    {
      "depth": 3,
      "value": "elem.offsetTop <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#offsetTop"
    },
    {
      "depth": 3,
      "value": "elem.offsetWidth <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#offsetWidth"
    },
    {
      "depth": 3,
      "value": "elem.spellcheck <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#spellcheck"
    },
    {
      "depth": 3,
      "value": "elem.title <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#title"
    },
    {
      "depth": 3,
      "value": "elem.translate <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#translate"
    },
    {
      "depth": 3,
      "value": "elem.attributes <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#attributes"
    },
    {
      "depth": 3,
      "value": "elem.classList <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#classList"
    },
    {
      "depth": 3,
      "value": "elem.className <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#className"
    },
    {
      "depth": 3,
      "value": "elem.clientHeight <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#clientHeight"
    },
    {
      "depth": 3,
      "value": "elem.clientLeft <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#clientLeft"
    },
    {
      "depth": 3,
      "value": "elem.clientTop <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#clientTop"
    },
    {
      "depth": 3,
      "value": "elem.clientWidth <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#clientWidth"
    },
    {
      "depth": 3,
      "value": "elem.id <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#id"
    },
    {
      "depth": 3,
      "value": "elem.innerHTML <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#innerHTML"
    },
    {
      "depth": 3,
      "value": "elem.localName <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#localName"
    },
    {
      "depth": 3,
      "value": "elem.namespaceURI <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#namespaceURI"
    },
    {
      "depth": 3,
      "value": "elem.outerHTML <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#outerHTML"
    },
    {
      "depth": 3,
      "value": "elem.part <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#part"
    },
    {
      "depth": 3,
      "value": "elem.prefix <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#prefix"
    },
    {
      "depth": 3,
      "value": "elem.scrollHeight <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#scrollHeight"
    },
    {
      "depth": 3,
      "value": "elem.scrollLeft <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#scrollLeft"
    },
    {
      "depth": 3,
      "value": "elem.scrollTop <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#scrollTop"
    },
    {
      "depth": 3,
      "value": "elem.scrollWidth <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#scrollWidth"
    },
    {
      "depth": 3,
      "value": "elem.shadowRoot <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#shadowRoot"
    },
    {
      "depth": 3,
      "value": "elem.slot <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#slot"
    },
    {
      "depth": 3,
      "value": "elem.tagName <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#tagName"
    },
    {
      "depth": 3,
      "value": "elem.baseURI <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#baseURI"
    },
    {
      "depth": 3,
      "value": "elem.childNodes <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#childNodes"
    },
    {
      "depth": 3,
      "value": "elem.firstChild <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#firstChild"
    },
    {
      "depth": 3,
      "value": "elem.isConnected <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#isConnected"
    },
    {
      "depth": 3,
      "value": "elem.lastChild <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#lastChild"
    },
    {
      "depth": 3,
      "value": "elem.nextSibling <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#nextSibling"
    },
    {
      "depth": 3,
      "value": "elem.nodeName <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#nodeName"
    },
    {
      "depth": 3,
      "value": "elem.nodeType <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#nodeType"
    },
    {
      "depth": 3,
      "value": "elem.nodeValue <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#nodeValue"
    },
    {
      "depth": 3,
      "value": "elem.ownerDocument <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#ownerDocument"
    },
    {
      "depth": 3,
      "value": "elem.parentElement <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#parentElement"
    },
    {
      "depth": 3,
      "value": "elem.parentNode <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#parentNode"
    },
    {
      "depth": 3,
      "value": "elem.previousSibling <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#previousSibling"
    },
    {
      "depth": 3,
      "value": "elem.textContent <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#textContent"
    },
    {
      "depth": 3,
      "value": "elem.style <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#style"
    },
    {
      "depth": 3,
      "value": "elem.contentEditable <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#contentEditable"
    },
    {
      "depth": 3,
      "value": "elem.isContentEditable <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#isContentEditable"
    },
    {
      "depth": 3,
      "value": "elem.dataset <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#dataset"
    },
    {
      "depth": 3,
      "value": "elem.nonce <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#nonce"
    },
    {
      "depth": 3,
      "value": "elem.tabIndex <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#tabIndex"
    },
    {
      "depth": 3,
      "value": "elem.nextElementSibling <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#nextElementSibling"
    },
    {
      "depth": 3,
      "value": "elem.previousElementSibling <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#previousElementSibling"
    },
    {
      "depth": 3,
      "value": "elem.childElementCount <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#childElementCount"
    },
    {
      "depth": 3,
      "value": "elem.children <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#children"
    },
    {
      "depth": 3,
      "value": "elem.firstElementChild <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#firstElementChild"
    },
    {
      "depth": 3,
      "value": "elem.lastElementChild <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#lastElementChild"
    },
    {
      "depth": 3,
      "value": "elem.assignedSlot <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#assignedSlot"
    },
    {
      "depth": 2,
      "value": "Methods",
      "anchor": "#methods"
    },
    {
      "depth": 3,
      "value": "elem.checkValidity <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#checkValidity"
    },
    {
      "depth": 3,
      "value": "elem.reportValidity <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#reportValidity"
    },
    {
      "depth": 3,
      "value": "elem.select <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#select"
    },
    {
      "depth": 3,
      "value": "elem.setRangeText <em>(replacement, start?, end?, selectionMode?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#setRangeText"
    },
    {
      "depth": 3,
      "value": "elem.setSelectionRange <em>(start, end, direction?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#setSelectionRange"
    },
    {
      "depth": 3,
      "value": "elem.stepDown <em>(n?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#stepDown"
    },
    {
      "depth": 3,
      "value": "elem.stepUp <em>(n?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#stepUp"
    },
    {
      "depth": 3,
      "value": "elem.click <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#click"
    },
    {
      "depth": 3,
      "value": "elem.closest <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#closest"
    },
    {
      "depth": 3,
      "value": "elem.getAttribute <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getAttribute"
    },
    {
      "depth": 3,
      "value": "elem.getAttributeNames <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getAttributeNames"
    },
    {
      "depth": 3,
      "value": "elem.getAttributeNode <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getAttributeNode"
    },
    {
      "depth": 3,
      "value": "elem.getAttributeNodeNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getAttributeNodeNS"
    },
    {
      "depth": 3,
      "value": "elem.getAttributeNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getAttributeNS"
    },
    {
      "depth": 3,
      "value": "elem.getBoundingClientRect <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getBoundingClientRect"
    },
    {
      "depth": 3,
      "value": "elem.getClientRects <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getClientRects"
    },
    {
      "depth": 3,
      "value": "elem.getElementsByClassName <em>(classNames)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getElementsByClassName"
    },
    {
      "depth": 3,
      "value": "elem.getElementsByTagName <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getElementsByTagName"
    },
    {
      "depth": 3,
      "value": "elem.getElementsByTagNameNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getElementsByTagNameNS"
    },
    {
      "depth": 3,
      "value": "elem.hasAttribute <em>(qualifiedName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#hasAttribute"
    },
    {
      "depth": 3,
      "value": "elem.hasAttributeNS <em>(namespace, localName)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#hasAttributeNS"
    },
    {
      "depth": 3,
      "value": "elem.hasAttributes <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#hasAttributes"
    },
    {
      "depth": 3,
      "value": "elem.hasPointerCapture <em>(pointerId)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#hasPointerCapture"
    },
    {
      "depth": 3,
      "value": "elem.matches <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#matches"
    },
    {
      "depth": 3,
      "value": "elem.requestFullscreen <em>(options?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#requestFullscreen"
    },
    {
      "depth": 3,
      "value": "elem.requestPointerLock <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#requestPointerLock"
    },
    {
      "depth": 3,
      "value": "elem.scrollIntoView <em>(arg?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#scrollIntoView"
    },
    {
      "depth": 3,
      "value": "elem.compareDocumentPosition <em>(other)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#compareDocumentPosition"
    },
    {
      "depth": 3,
      "value": "elem.contains <em>(other)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#contains"
    },
    {
      "depth": 3,
      "value": "elem.getRootNode <em>(options?)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#getRootNode"
    },
    {
      "depth": 3,
      "value": "elem.hasChildNodes <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#hasChildNodes"
    },
    {
      "depth": 3,
      "value": "elem.isDefaultNamespace <em>(namespace)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#isDefaultNamespace"
    },
    {
      "depth": 3,
      "value": "elem.isEqualNode <em>(otherNode)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#isEqualNode"
    },
    {
      "depth": 3,
      "value": "elem.isSameNode <em>(otherNode)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#isSameNode"
    },
    {
      "depth": 3,
      "value": "elem.lookupNamespaceURI <em>(prefix)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#lookupNamespaceURI"
    },
    {
      "depth": 3,
      "value": "elem.lookupPrefix <em>(namespace)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#lookupPrefix"
    },
    {
      "depth": 3,
      "value": "elem.normalize <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#normalize"
    },
    {
      "depth": 3,
      "value": "elem.blur <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#blur"
    },
    {
      "depth": 3,
      "value": "elem.focus <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#focus"
    },
    {
      "depth": 3,
      "value": "elem.querySelector <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#querySelector"
    },
    {
      "depth": 3,
      "value": "elem.querySelectorAll <em>(selectors)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#querySelectorAll"
    },
    {
      "depth": 2,
      "value": "Unimplemented Specs",
      "anchor": "#unimplemented-specs"
    }
  ]
}