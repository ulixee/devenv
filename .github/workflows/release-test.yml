name: Release Test Matrix

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [18, 20]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Chocolatey Install Action
        if: ${{ matrix.os == 'windows-latest' }}
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install python2 visualcpp-build-tools -y

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        if: ${{ matrix.os == 'windows-latest' }}

      - name: Yarn build
        run: yarn --ignore-engines && yarn build --ignore-engines
        env:
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1

      - name: Linux - Apt Install Chrome(s)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory: ./build
        run: sudo $(npx install-browser-deps)

      - name: Run tests
        run: yarn test --testTimeout=60000 --maxWorkers=2
        env:
          SKIP_E2E: true
          CI: true
          ULX_DATASTORE_TMP_DIR: ${{ github.workspace }}/build/.data-test-tmp

      - name: 'Tar files'
        if: ${{ failure() }}
        run: tar -cvf test-dbs.tar build/.data-test

      - name: Upload Databases
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-dbs-${{matrix.os}}-${{ matrix.node-version }}
          path: test-dbs.tar
          retention-days: 1
