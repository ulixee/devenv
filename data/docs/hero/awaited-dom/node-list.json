{
  "content": "<h1 id=\"awaiteddom--nodelist\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#awaiteddom--nodelist\">#</a><a href=\"/docs/hero/basic-client/awaited-dom\">AwaitedDOM</a> <span>/</span> NodeList</h1>\n<div class='overview'><span class=\"seoSummary\"><strong><code>NodeList</code></strong> objects are collections of nodes, usually returned by properties such as <code>Node.childNodes</code> and methods such as <code>document.querySelectorAll()</code>.</span></div>\n<h2 id=\"properties\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#properties\">#</a>Properties</h2>\n<h3 id=\"length\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#length\">#</a>.length <div class=\"specs\"><i>W3C</i></div></h3>\n<p>The number of nodes in the <code>NodeList</code>.</p>\n<h4 id=\"type-promisenumber\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#type-promisenumber\">#</a><strong>Type</strong>: <code>Promise&#x3C;number></code></h4>\n<h2 id=\"methods\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#methods\">#</a>Methods</h2>\n<h3 id=\"entries\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#entries\">#</a>.entries <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an <code>iterator</code>, allowing code to go through all key/value pairs contained in the collection. (In this case, the keys are numbers starting from <code>0</code> and the values are nodes.)</p>\n<h4 id=\"returns-promise\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promise\">#</a><strong>Returns</strong>: <code>Promise&#x3C;></code></h4>\n<h3 id=\"forEach\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#forEach\">#</a>.forEach <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Executes a provided function once per <code>NodeList</code> element, passing the element as an argument to the function.</p>\n<h4 id=\"returns-promise-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promise-1\">#</a><strong>Returns</strong>: <code>Promise&#x3C;></code></h4>\n<h3 id=\"item\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#item\">#</a>.item <em>(index)</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an item in the list by its index, or <code>null</code> if the index is out-of-bounds.</p>\n<h4 id=\"arguments\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#arguments\">#</a><strong>Arguments</strong>:</h4>\n<ul>\n<li>index <code>number</code>. <code>index</code> is the index of the node to be fetched. The index is zero-based.</li>\n</ul>\n<h4 id=\"returns-supernode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-supernode\">#</a><strong>Returns</strong>: <a href=\"/docs/hero/awaited-dom/super-node\"><code>SuperNode</code></a></h4>\n<h3 id=\"keys\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#keys\">#</a>.keys <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an <code>iterator</code>, allowing code to go through all the keys of the key/value pairs contained in the collection. (In this case, the keys are numbers starting from <code>0</code>.)</p>\n<h4 id=\"returns-promise-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promise-2\">#</a><strong>Returns</strong>: <code>Promise&#x3C;></code></h4>\n<h3 id=\"values\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#values\">#</a>.values <em>()</em> <div class=\"specs\"><i>W3C</i></div></h3>\n<p>Returns an <code>iterator</code> allowing code to go through all values (nodes) of the key/value pairs contained in the collection.</p>\n<h4 id=\"returns-promise-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#returns-promise-3\">#</a><strong>Returns</strong>: <code>Promise&#x3C;></code></h4>",
  "title": " <span>/</span> NodeList",
  "subtitles": [
    {
      "depth": 2,
      "value": "Properties",
      "anchor": "#properties"
    },
    {
      "depth": 3,
      "value": ".length <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#length"
    },
    {
      "depth": 2,
      "value": "Methods",
      "anchor": "#methods"
    },
    {
      "depth": 3,
      "value": ".entries <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#entries"
    },
    {
      "depth": 3,
      "value": ".forEach <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#forEach"
    },
    {
      "depth": 3,
      "value": ".item <em>(index)</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#item"
    },
    {
      "depth": 3,
      "value": ".keys <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#keys"
    },
    {
      "depth": 3,
      "value": ".values <em>()</em> <div class=\"specs\"><i>W3C</i></div>",
      "anchor": "#values"
    }
  ]
}